{"remainingRequest":"D:\\VScode product\\vue3\\v3_echarts\\v3_echarts\\myapp\\node_modules\\babel-loader\\lib\\index.js!D:\\VScode product\\vue3\\v3_echarts\\v3_echarts\\myapp\\node_modules\\vue-loader-v16\\dist\\templateLoader.js??ref--6!D:\\VScode product\\vue3\\v3_echarts\\v3_echarts\\myapp\\node_modules\\cache-loader\\dist\\cjs.js??ref--1-0!D:\\VScode product\\vue3\\v3_echarts\\v3_echarts\\myapp\\node_modules\\vue-loader-v16\\dist\\index.js??ref--1-1!D:\\VScode product\\vue3\\v3_echarts\\v3_echarts\\myapp\\src\\components\\itemTwo.vue?vue&type=template&id=476f504e","dependencies":[{"path":"D:\\VScode product\\vue3\\v3_echarts\\v3_echarts\\myapp\\src\\components\\itemTwo.vue","mtime":1661047526123},{"path":"D:\\VScode product\\vue3\\v3_echarts\\v3_echarts\\myapp\\babel.config.js","mtime":1661047517228},{"path":"D:\\VScode product\\vue3\\v3_echarts\\v3_echarts\\myapp\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1661047985519},{"path":"D:\\VScode product\\vue3\\v3_echarts\\v3_echarts\\myapp\\node_modules\\babel-loader\\lib\\index.js","mtime":1661047988275},{"path":"D:\\VScode product\\vue3\\v3_echarts\\v3_echarts\\myapp\\node_modules\\vue-loader-v16\\dist\\templateLoader.js","mtime":1661047989017},{"path":"D:\\VScode product\\vue3\\v3_echarts\\v3_echarts\\myapp\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1661047985519},{"path":"D:\\VScode product\\vue3\\v3_echarts\\v3_echarts\\myapp\\node_modules\\vue-loader-v16\\dist\\index.js","mtime":1661047988115}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IHsgY3JlYXRlRWxlbWVudFZOb2RlIGFzIF9jcmVhdGVFbGVtZW50Vk5vZGUsIG9wZW5CbG9jayBhcyBfb3BlbkJsb2NrLCBjcmVhdGVFbGVtZW50QmxvY2sgYXMgX2NyZWF0ZUVsZW1lbnRCbG9jayB9IGZyb20gInZ1ZSI7Cgp2YXIgX2hvaXN0ZWRfMSA9IC8qI19fUFVSRV9fKi9fY3JlYXRlRWxlbWVudFZOb2RlKCJoMiIsIG51bGwsICLlkajplIDlm74iLCAtMQovKiBIT0lTVEVEICovCik7Cgp2YXIgX2hvaXN0ZWRfMiA9IC8qI19fUFVSRV9fKi9fY3JlYXRlRWxlbWVudFZOb2RlKCJkaXYiLCB7CiAgImNsYXNzIjogImNoYXJ0IiwKICBpZDogIm15RWNoYXJ0c1R3byIKfSwgIuWbvuihqOeahOWuueWZqCIsIC0xCi8qIEhPSVNURUQgKi8KKTsKCnZhciBfaG9pc3RlZF8zID0gW19ob2lzdGVkXzEsIF9ob2lzdGVkXzJdOwpleHBvcnQgZnVuY3Rpb24gcmVuZGVyKF9jdHgsIF9jYWNoZSwgJHByb3BzLCAkc2V0dXAsICRkYXRhLCAkb3B0aW9ucykgewogIHJldHVybiBfb3BlbkJsb2NrKCksIF9jcmVhdGVFbGVtZW50QmxvY2soImRpdiIsIG51bGwsIF9ob2lzdGVkXzMpOwp9"},{"version":3,"sources":["D:\\VScode product\\vue3\\v3_echarts\\v3_echarts\\myapp\\src\\components\\itemTwo.vue"],"names":[],"mappings":";;8BAEI,mBAAA,CAAY,IAAZ,EAAY,IAAZ,EAAI,KAAJ,EAAO,CAAA;AAAA;AAAP,C;;8BACA,mBAAA,CAAgD,KAAhD,EAAgD;AAA3C,WAAM,OAAqC;AAA7B,EAAA,EAAE,EAAC;AAA0B,CAAhD,EAAqC,OAArC,EAA0C,CAAA;AAAA;AAA1C,C;;kBADA,U,EACA,U;;uBAFF,mBAAA,CAGM,KAHN,EAGM,IAHN,EAGM,UAHN,C","sourcesContent":["<template>\n  <div>\n    <h2>周销图</h2>\n    <div class=\"chart\" id=\"myEchartsTwo\">图表的容器</div>\n  </div>\n</template>\n\n<script>\nimport { inject, onMounted, reactive } from \"vue\";\nexport default {\n  setup() {\n    let $echarts = inject(\"echarts\");\n    let $http = inject(\"axios\");\n\n    let data = reactive({});\n\n    async function getState() {\n      data = await $http({ url: \"/two/data\" });\n    }\n\n    onMounted(() => {\n      getState().then(() => {\n        console.log(\"折线图\", data);\n\n        let myChart = $echarts.init(document.getElementById(\"myEchartsTwo\"));\n        myChart.setOption({\n          tooltip:{\n            trigger:\"axis\",\n            axisPointer:{\n              type:\"cross\",\n              label:{\n                backgroundColor:\"#e6b600\"\n              }\n            }\n          },\n          legend:{\n            data:[\"服饰\",\"数码\",\"家电\",\"家居\",\"日化\"]\n          },\n          grid:{\n            left:\"1%\",\n            right:\"4%\",\n            bottom:\"3%\",\n            containLabel:true\n          },\n          xAxis: {\n            type: \"category\",\n            boundaryGap: false,\n            data: data.data.chartTwo.chartData.day,\n            axisLine:{\n              lineStyle:{\n                color:\"#fff\"\n              }\n            }\n          },\n          yAxis: {\n            type: \"value\",\n            axisLine:{\n              lineStyle:{\n                color:\"#fff\"\n              }\n            }\n          },\n          series: [\n            {\n              name: \"服饰\",\n              type: \"line\",\n              data: data.data.chartTwo.chartData.num.Chemicals,\n              smooth: true,\n              showSymbol: false,\n              stack: \"Total\",\n              lineStyle: {\n                width: 0,\n              },\n              emphasis: {\n                focus: \"series\",\n              },\n\n              areaStyle: {\n                opacity: 0.8,\n                color: new $echarts.graphic.LinearGradient(0, 0, 0, 1, [\n                  {\n                    offset: 0,\n                    color: \"rgb(128, 255, 165)\",\n                  },\n                  {\n                    offset: 1,\n                    color: \"rgb(1, 191, 236)\",\n                  },\n                ]),\n              },\n            },\n            {\n              name: \"数码\",\n              type: \"line\",\n              data: data.data.chartTwo.chartData.num.Clothes,\n              stack: \"Total\", //数据堆叠\n              smooth: true, //折线图平滑效果 变成曲线图\n              showSymbol: false, //   隐藏所有数据点\n\n              areaStyle: {\n                opacity: 0.8,\n                color: new $echarts.graphic.LinearGradient(0, 0, 0, 1, [\n                  {\n                    offset: 0,\n                    color: \"rgb(0, 221, 255)\",\n                  },\n                  {\n                    offset: 1,\n                    color: \"rgb(77, 119, 255)\",\n                  },\n                ]),\n              },\n              lineStyle: {\n                // 设置线段样式\n                width: 0,\n              },\n              emphasis: {\n                //设置高亮的图形样式和标签样式\n                focus: \"series\", //只显示选中的内容高亮\n              },\n            },\n            {\n              name: \"家电\",\n              type: \"line\",\n              data: data.data.chartTwo.chartData.num.Electrical,\n              stack: \"Total\", //数据堆叠\n              smooth: true, //折线图平滑效果 变成曲线图\n              showSymbol: false, //   隐藏所有数据点\n\n              areaStyle: {\n                opacity: 0.8,\n                color: new $echarts.graphic.LinearGradient(0, 0, 0, 1, [\n                  {\n                    offset: 0,\n                    color: \"rgb(55, 162, 255)\",\n                  },\n                  {\n                    offset: 1,\n                    color: \"rgb(116, 21, 219)\",\n                  },\n                ]),\n              },\n              lineStyle: {\n                // 设置线段样式\n                width: 0,\n              },\n              emphasis: {\n                //设置高亮的图形样式和标签样式\n                focus: \"series\", //只显示选中的内容高亮\n              },\n            },\n            {\n              name: \"家居\",\n              type: \"line\",\n              data: data.data.chartTwo.chartData.num.digit,\n              stack: \"Total\", //数据堆叠\n              smooth: true, //折线图平滑效果 变成曲线图\n              showSymbol: false, //   隐藏所有数据点\n\n              areaStyle: {\n                opacity: 0.8,\n                color: new $echarts.graphic.LinearGradient(0, 0, 0, 1, [\n                  {\n                    offset: 0,\n                    color: \"rgb(255, 0, 135)\",\n                  },\n                  {\n                    offset: 1,\n                    color: \"rgb(135, 0, 157)\",\n                  },\n                ]),\n              },\n              lineStyle: {\n                // 设置线段样式\n                width: 0,\n              },\n              emphasis: {\n                //设置高亮的图形样式和标签样式\n                focus: \"series\", //只显示选中的内容高亮\n              },\n            },\n            {\n              name: \"日化\",\n              type: \"line\",\n              data: data.data.chartTwo.chartData.num.gear,\n              stack: \"Total\", //数据堆叠\n              smooth: true, //折线图平滑效果 变成曲线图\n              showSymbol: false, //   隐藏所有数据点\n\n              areaStyle: {\n                opacity: 0.8,\n                color: new $echarts.graphic.LinearGradient(0, 0, 0, 1, [\n                  {\n                    offset: 0,\n                    color: \"rgb(255, 191, 0)\",\n                  },\n                  {\n                    offset: 1,\n                    color: \"rgb(224, 62, 76)\",\n                  },\n                ]),\n              },\n              lineStyle: {\n                // 设置线段样式\n                width: 0,\n              },\n              emphasis: {\n                //设置高亮的图形样式和标签样式\n                focus: \"series\", //只显示选中的内容高亮\n              },\n            },\n          ],\n        });\n      });\n    });\n    return {\n      getState,\n      data,\n    };\n  },\n};\n</script>\n\n<style>\nh2 {\n  height: 0.6rem;\n  color: #fff;\n  line-height: 0.6rem;\n  font-size: 0.25rem;\n  text-align: center;\n}\n.chart {\n  height: 4.5rem;\n}\n</style>"],"sourceRoot":""}]}